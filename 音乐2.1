local player = game:GetService("Players").LocalPlayer
local userInput = game:GetService("UserInputService")
local replicatedStorage = game:GetService("ReplicatedStorage")
local runService = game:GetService("RunService")

if not player:FindFirstChild("PlayerGui") then player:WaitForChild("PlayerGui") end

-- 全局混淆参数
local GLOBAL_CONFUSION_ID = math.random(100000000, 999999999)

local function CreateFullUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "MusicController_"..math.random(1000,9999)
    screenGui.ResetOnSpawn = false
    screenGui.DisplayOrder = 999
    screenGui.Parent = player.PlayerGui

    -- 主框架
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 300, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
    mainFrame.BorderSizePixel = 1
    mainFrame.Parent = screenGui

    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Position = UDim2.new(0, 5, 0, 0)
    titleLabel.Text = "MUSIC PLAYER ♪♪[made by余客]"
    titleLabel.TextColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = titleBar

    -- 关闭按钮
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 25, 0, 25)
    closeButton.Position = UDim2.new(1, -30, 0.5, -12.5)
    closeButton.AnchorPoint = Vector2.new(1, 0.5)
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 16
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.BorderSizePixel = 0
    closeButton.Parent = titleBar
    closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)

    -- Twin按钮
    local twinButton = Instance.new("TextButton")
    twinButton.Size = UDim2.new(0, 25, 0, 25)
    twinButton.Position = UDim2.new(1, -65, 0.5, -12.5)
    twinButton.AnchorPoint = Vector2.new(1, 0.5)
    twinButton.Text = "Twin"
    twinButton.Font = Enum.Font.SourceSansBold
    twinButton.TextSize = 12
    twinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    twinButton.BackgroundColor3 = Color3.fromRGB(120, 120, 200)
    twinButton.BorderSizePixel = 0
    twinButton.Parent = titleBar

    -- === UI布局 ===
    local CONTROL_HEIGHT = 25

    -- 音乐ID输入框
    local musicIDBox = Instance.new("TextBox")
    musicIDBox.Size = UDim2.new(0.9, 0, 0, CONTROL_HEIGHT)
    musicIDBox.Position = UDim2.new(0.05, 0, 0.2, 0)
    musicIDBox.PlaceholderText = "[Music ID]"
    musicIDBox.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    musicIDBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    musicIDBox.Font = Enum.Font.SourceSans
    musicIDBox.TextSize = 14
    musicIDBox.Parent = mainFrame

    -- 音量输入框
    local volumeBox = Instance.new("TextBox")
    volumeBox.Size = UDim2.new(0.4, 0, 0, CONTROL_HEIGHT)
    volumeBox.Position = UDim2.new(0.05, 0, 0.4, 0)
    volumeBox.PlaceholderText = "[Volume] (0.1-100)"
    volumeBox.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    volumeBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    volumeBox.Font = Enum.Font.SourceSans
    volumeBox.TextSize = 14
    volumeBox.Parent = mainFrame

    -- 音调输入框
    local pitchBox = Instance.new("TextBox")
    pitchBox.Size = UDim2.new(0.4, 0, 0, CONTROL_HEIGHT)
    pitchBox.Position = UDim2.new(0.55, 0, 0.4, 0)
    pitchBox.PlaceholderText = "[Pitch] (0.1-100)"
    pitchBox.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    pitchBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    pitchBox.Font = Enum.Font.SourceSans
    pitchBox.TextSize = 14
    pitchBox.Parent = mainFrame

    -- 播放按钮
    local playButton = Instance.new("TextButton")
    playButton.Size = UDim2.new(0.4, 0, 0, 30)
    playButton.Position = UDim2.new(0.05, 0, 0.65, 0)
    playButton.Text = "Play"
    playButton.Font = Enum.Font.SourceSansBold
    playButton.TextSize = 14
    playButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    playButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    playButton.Parent = mainFrame

    -- 停止按钮
    local stopButton = Instance.new("TextButton")
    stopButton.Size = UDim2.new(0.4, 0, 0, 30)
    stopButton.Position = UDim2.new(0.55, 0, 0.65, 0)
    stopButton.Text = "Stop"
    stopButton.Font = Enum.Font.SourceSansBold
    stopButton.TextSize = 14
    stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    stopButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
    stopButton.Parent = mainFrame

    -- 循环开关
    local loopToggle = Instance.new("TextButton")
    loopToggle.Size = UDim2.new(0.4, 0, 0, 25)
    loopToggle.Position = UDim2.new(0.55, 0, 0.85, 0)
    loopToggle.Text = "Loop: ON"
    loopToggle.Font = Enum.Font.SourceSansBold
    loopToggle.TextSize = 12
    loopToggle.BackgroundTransparency = 1
    loopToggle.TextColor3 = Color3.fromRGB(0, 200, 0)
    loopToggle.Parent = mainFrame

    -- 智能模式按钮
    local modeButton = Instance.new("TextButton")
    modeButton.Size = UDim2.new(0.4, 0, 0, 25)
    modeButton.Position = UDim2.new(0.05, 0, 0.85, 0)
    modeButton.Text = "智能模式"
    modeButton.Font = Enum.Font.SourceSansBold
    modeButton.TextSize = 12
    modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    modeButton.BackgroundColor3 = Color3.fromRGB(180, 180, 255)
    modeButton.Parent = mainFrame

    -- === 功能系统 ===
    local soundSystem = {
        LoopEnabled = true,
        ActiveSounds = {},
        RemoteEvent = nil,
        CurrentMode = "auto",
        ModeNames = {auto = "智能模式", mode1 = "缓存模式", mode2 = "遍历模式"},
        ModeColors = {
            auto = Color3.fromRGB(180, 180, 255),
            mode1 = Color3.fromRGB(180, 255, 180),
            mode2 = Color3.fromRGB(255, 180, 180)
        },
        LastSoundName = nil,
        TwinMode = false
    }
    
    local function UpdateModeButton()
        modeButton.Text = soundSystem.ModeNames[soundSystem.CurrentMode]
        modeButton.BackgroundColor3 = soundSystem.ModeColors[soundSystem.CurrentMode]
    end
    
    modeButton.MouseButton1Click:Connect(function()
        soundSystem.CurrentMode = soundSystem.CurrentMode == "auto" and "mode1" or 
                                 soundSystem.CurrentMode == "mode1" and "mode2" or "auto"
        UpdateModeButton()
    end)
    
    local function UpdateTwinModeButton()
        twinButton.BackgroundColor3 = soundSystem.TwinMode and 
            Color3.fromRGB(70, 130, 200) or Color3.fromRGB(120, 120, 180)
    end
    
    twinButton.MouseButton1Click:Connect(function()
        soundSystem.TwinMode = not soundSystem.TwinMode
        UpdateTwinModeButton()
    end)
    
    UpdateModeButton()
    UpdateTwinModeButton()
    
    -- 生成混淆ID
    local function GenerateConfusedID()
        local ids = {}
        local allPlayers = game:GetService("Players"):GetPlayers()
        
        for i = 1, math.random(3,5) do
            if #allPlayers > 1 then
                local randomPlayer = allPlayers[math.random(1, #allPlayers)]
                if randomPlayer ~= player then
                    table.insert(ids, randomPlayer.UserId)
                end
            end
        end
        
        table.insert(ids, math.random(100000000, 999999999))
        table.insert(ids, player.UserId + math.random(-500, 500))
        table.insert(ids, player.UserId * math.random(1.2, 1.8))
        table.insert(ids, math.random(1000000000, 9999999999))
        table.insert(ids, "ID_"..math.random(1000000, 9999999))
        table.insert(ids, "Player_"..math.random(10000,99999))
        table.insert(ids, "INVALID_ID")
        table.insert(ids, "0")
        table.insert(ids, "nil")
        table.insert(ids, "unknown")
        table.insert(ids, GLOBAL_CONFUSION_ID)
        
        return ids[math.random(#ids)]
    end
    
    -- 生成虚假玩家名
    local function GenerateFakeUsername()
        local prefixes = {"Player", "User", "Guest", "Roblox", "Game", "Sound", "Music", "Audio"}
        local suffixes = {"123", "456", "789", "X", "Pro", "Master", "Lover", "Fan", "King", "Queen"}
        return prefixes[math.random(#prefixes)]..suffixes[math.random(#suffixes)]..math.random(100,999)
    end
    
    -- 保护远程调用
    local function ProtectedFireServer(remote, ...)
        local args = {...}
        table.insert(args, GenerateConfusedID())
        table.insert(args, GenerateFakeUsername())
        
        if math.random() < 0.7 then
            table.insert(args, math.random())
        end
        if math.random() < 0.5 then
            table.insert(args, "param_"..math.random(1000,9999))
        end
        
        if math.random() < 0.3 then
            pcall(function()
                local fakeEvents = {
                    function() 
                        remote:FireServer("newSound", "FakeSound_"..math.random(1000,9999), workspace, 
                                        "rbxassetid://0", 0, 0, false, GenerateConfusedID())
                    end,
                    function()
                        remote:FireServer("playSound", "FakeSound_"..math.random(1000,9999), GenerateConfusedID())
                    end,
                    function()
                        remote:FireServer("stopSound", "FakeSound_"..math.random(1000,9999), GenerateConfusedID())
                    end,
                    function()
                        remote:FireServer("updateSound", "FakeSound_"..math.random(1000,9999), 0, 0, GenerateConfusedID())
                    end
                }
                fakeEvents[math.random(#fakeEvents)]()
            end)
        end
        
        return pcall(function() remote:FireServer(unpack(args)) end)
    end
    
    -- 停止专用保护调用
    local function ProtectedFireServerForStop(remote, command, soundID)
        local args = {command, soundID}
        table.insert(args, GenerateConfusedID())
        
        if math.random() < 0.1 then
            pcall(function()
                remote:FireServer("stopSound", "FakeSound_"..math.random(1000,9999), GenerateConfusedID())
            end)
        end
        
        return pcall(function() remote:FireServer(unpack(args)) end)
    end
    
    -- 时间混淆系统
    local function TimeConfusedCall(callback)
        local delay = math.random(5, 30)/100
        runService.Heartbeat:Wait()
        task.delay(delay, callback)
    end
    
    -- 生成自然名称
    local function generateNaturalName()
        local prefixes = {"Music", "Sound", "Track", "Audio", "BG", "SFX", "Ambient"}
        local suffixes = {"Player", "System", "Device", "Box", "Machine", "Unit"}
        return prefixes[math.random(#prefixes)].."_"..suffixes[math.random(#suffixes)].."_"..math.random(1000,9999)
    end
    
    -- 生成音乐ID名称
    local function generateMusicIDName(musicID)
        return #musicID < 6 and "Audio_"..musicID or "Audio_"..musicID:sub(-6)
    end
    
    -- 生成随机名称
    local function generateRandomName()
        local chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
        local name = ""
        for i = 1, math.random(8,12) do
            name = name .. string.sub(chars, math.random(1, #chars), math.random(1, #chars))
        end
        return name
    end
    
    -- 生成声音名称
    local function generateSoundName(musicID)
        local strategies = {generateNaturalName, generateRandomName, function() return generateMusicIDName(musicID) end}
        return strategies[math.random(#strategies)]()
    end
    
    -- 安全停止声音 (修复版)
    local function SafeStopSound(soundID)
        local stopped = false
        for _, location in ipairs({workspace, replicatedStorage}) do
            for _, obj in ipairs(location:GetDescendants()) do
                if obj:IsA("RemoteEvent") and obj.Name == "AC6_FE_Sounds" then
                    TimeConfusedCall(function()
                        pcall(function()
                            -- 使用专用停止保护调用
                            ProtectedFireServerForStop(obj, "stopSound", soundID)
                            stopped = true
                        end)
                    end)
                end
            end
        end
        
        for i = #soundSystem.ActiveSounds, 1, -1 do
            if soundSystem.ActiveSounds[i] == soundID then table.remove(soundSystem.ActiveSounds, i) end
        end
        return stopped
    end
    
    -- 停止所有声音 (修复版)
    local function StopAllSounds()
        if #soundSystem.ActiveSounds == 0 then return end
        
        TimeConfusedCall(function()
            local remoteEvents = {}
            
            for _, location in ipairs({workspace, replicatedStorage}) do
                for _, v in ipairs(location:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name == "AC6_FE_Sounds" then
                        table.insert(remoteEvents, v)
                    end
                end
            end
            
            if #remoteEvents == 0 then return end
            
            -- 创建声音ID副本
            local soundsToStop = {}
            for _, soundID in ipairs(soundSystem.ActiveSounds) do
                table.insert(soundsToStop, soundID)
            end
            
            -- 只发送一次停止命令
            for _, remote in ipairs(remoteEvents) do
                TimeConfusedCall(function()
                    pcall(function()
                        -- 使用专用停止保护调用
                        for _, soundID in ipairs(soundsToStop) do
                            ProtectedFireServerForStop(remote, "stopSound", soundID)
                        end
                    end)
                end)
            end
            
            soundSystem.ActiveSounds = {}
            soundSystem.LastSoundName = nil
        end)
    end
    
    -- 缓存模式播放
    local function Mode1_Play(musicID, volume, pitch, loopEnabled)
        if soundSystem.RemoteEvent and not soundSystem.RemoteEvent:IsDescendantOf(game) then
            soundSystem.RemoteEvent = nil
        end
        
        if not soundSystem.RemoteEvent then
            for _, location in ipairs({workspace, replicatedStorage}) do
                for _, obj in ipairs(location:GetDescendants()) do
                    if obj:IsA("RemoteEvent") and obj.Name == "AC6_FE_Sounds" then
                        soundSystem.RemoteEvent = obj
                        break
                    end
                end
                if soundSystem.RemoteEvent then break end
            end
        end
        
        if not soundSystem.RemoteEvent then return false end
        
        local soundName = generateSoundName(musicID)
        local success = false
        
        local function PlaySound()
            success = pcall(function()
                ProtectedFireServer(soundSystem.RemoteEvent, "newSound", soundName, workspace, 
                                 "rbxassetid://"..musicID, pitch, volume, loopEnabled)
                ProtectedFireServer(soundSystem.RemoteEvent, "playSound", soundName)
            end)
        end
        
        TimeConfusedCall(PlaySound)
        
        if success then
            table.insert(soundSystem.ActiveSounds, soundName)
            soundSystem.LastSoundName = soundName
            return true
        else
            if not pcall(function() soundSystem.RemoteEvent:FireServer("ping") end) then
                soundSystem.RemoteEvent = nil
            end
            return false
        end
    end

    -- 遍历模式播放
    local function Mode2_Play(musicID, volume, pitch, loopEnabled)
        local soundName = generateSoundName(musicID)
        local playedSuccessfully = false
        
        local function PlaySound()
            local remoteEvents = {}
            
            for _, location in ipairs({workspace, replicatedStorage}) do
                for _, v in ipairs(location:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name == "AC6_FE_Sounds" then
                        table.insert(remoteEvents, v)
                    end
                end
            end
            
            if #remoteEvents == 0 then return false end
            
            for _, remote in ipairs(remoteEvents) do
                local success = pcall(function()
                    ProtectedFireServer(remote, "newSound", soundName, workspace, 
                                     "rbxassetid://"..musicID, pitch, volume, loopEnabled)
                    ProtectedFireServer(remote, "playSound", soundName)
                end)
                
                if success then
                    playedSuccessfully = true
                    if not soundSystem.TwinMode then break end
                end
            end
        end
        
        TimeConfusedCall(PlaySound)
        
        if playedSuccessfully then
            table.insert(soundSystem.ActiveSounds, soundName)
            soundSystem.LastSoundName = soundName
        end
        return playedSuccessfully
    end
    
    -- 自动模式播放
    local function AutoMode_Play(musicID, volume, pitch, loopEnabled)
        return Mode1_Play(musicID, volume, pitch, loopEnabled) or Mode2_Play(musicID, volume, pitch, loopEnabled)
    end
    
    -- 处理播放
    local function handlePlayback()
        local musicID = musicIDBox.Text:gsub("%D+", "")
        if not musicID:match("^%d+$") or #musicID < 6 then return end
        
        local volume = math.clamp(tonumber(volumeBox.Text) or 1, 0.1, 100)
        local pitch = math.clamp(tonumber(pitchBox.Text) or 1, 0.1, 100)
        
        local success = false
        if soundSystem.CurrentMode == "mode1" then
            success = Mode1_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        elseif soundSystem.CurrentMode == "mode2" then
            success = Mode2_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        else
            success = AutoMode_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        end
        
        playButton.BackgroundColor3 = success and Color3.fromRGB(70, 170, 70) or Color3.fromRGB(170, 70, 70)
        task.delay(0.1, function() playButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100) end)
    end

    -- 处理停止 (修复版)
    local function handleStop()
        StopAllSounds()
        stopButton.BackgroundColor3 = Color3.fromRGB(200, 70, 70)
        task.delay(0.1, function() stopButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50) end)
    end
    
    -- 连接按钮事件
    playButton.MouseButton1Click:Connect(handlePlayback)
    stopButton.MouseButton1Click:Connect(handleStop)
    loopToggle.MouseButton1Click:Connect(function()
        soundSystem.LoopEnabled = not soundSystem.LoopEnabled
        loopToggle.Text = soundSystem.LoopEnabled and "Loop: ON" or "Loop: OFF"
        loopToggle.TextColor3 = soundSystem.LoopEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    end)

    -- 拖动功能
    local dragActive, dragStart, frameStart = false, Vector2.new(), UDim2.new()

    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or
           input.UserInputType == Enum.UserInputType.Touch then
            dragActive = true
            dragStart = input.Position
            frameStart = mainFrame.Position
        end
    end)

    mainFrame.InputChanged:Connect(function(input)
        if dragActive then
            local currentPos = input.UserInputType == Enum.UserInputType.Touch and input.Position or userInput:GetMouseLocation()
            local delta = currentPos - dragStart
            mainFrame.Position = UDim2.new(frameStart.X.Scale, frameStart.X.Offset + delta.X, frameStart.Y.Scale, frameStart.Y.Offset + delta.Y)
        end
    end)

    mainFrame.InputEnded:Connect(function() dragActive = false end)

    -- 初始化测试
    task.spawn(function()
        Mode1_Play("0", 0, 1, false)
    end)

    return screenGui
end

CreateFullUI()
