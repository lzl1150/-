local player = game:GetService("Players").LocalPlayer
local userInputService = game:GetService("UserInputService")
local replicatedStorage = game:GetService("ReplicatedStorage")
local tweenService = game:GetService("TweenService")

if not player:FindFirstChild("PlayerGui") then player:WaitForChild("PlayerGui") end

-- 添加圆角效果的函数
local function ApplyRoundedCorners(uiElement, cornerRadius)
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, cornerRadius or 8)
    uiCorner.Parent = uiElement
    return uiCorner
end

local function CreateFullUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "MusicPlayerUI_"..math.random(1000,9999)
    screenGui.ResetOnSpawn = false
    screenGui.DisplayOrder = 999
    screenGui.Parent = player.PlayerGui

    -- ==================== 主容器美化 - 关键改进：提高整体背景亮度 ====================
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 300, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(95, 95, 105) -- 提高整体背景亮度
    mainFrame.BackgroundTransparency = 0
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- 关键改进：增强主容器渐变效果，提高对比度
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(225, 75, 85)),  -- 明显提高顶部亮度
        ColorSequenceKeypoint.new(1, Color3.fromRGB(55, 55, 65))   -- 适度提高底部亮度
    })
    gradient.Rotation = 45
    gradient.Parent = mainFrame
    
    ApplyRoundedCorners(mainFrame, 12)
    
    -- 添加细微阴影
    local uiStroke = Instance.new("UIStroke")
    uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    uiStroke.Color = Color3.fromRGB(0, 0, 0)
    uiStroke.Transparency = 0.8
    uiStroke.Thickness = 2
    uiStroke.Parent = mainFrame

    -- ==================== 标题栏美化 ====================
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, -20, 0, 30)
    titleBar.Position = UDim2.new(0, 10, 0, 5)
    titleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 75) -- 提高标题栏亮度
    titleBar.BackgroundTransparency = 0
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    -- 标题栏渐变
    local titleGradient = Instance.new("UIGradient")
    titleGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(90, 120, 200)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 90, 160))
    })
    titleGradient.Rotation = 90
    titleGradient.Parent = titleBar
    
    ApplyRoundedCorners(titleBar, 8)
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -80, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.Text = "MUSIC PLAYER ♪[made by余客]"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = titleBar

    -- ==================== 控制按钮 ====================
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 25, 0, 25)
    closeButton.Position = UDim2.new(1, -30, 0.5, -12.5)
    closeButton.AnchorPoint = Vector2.new(1, 0.5)
    closeButton.Text = "×"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 18
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
    closeButton.BorderSizePixel = 0
    closeButton.Parent = titleBar
    ApplyRoundedCorners(closeButton, 6)
    
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    local twinButton = Instance.new("TextButton")
    twinButton.Size = UDim2.new(0, 25, 0, 25)
    twinButton.Position = UDim2.new(1, -65, 0.5, -12.5)
    twinButton.AnchorPoint = Vector2.new(1, 0.5)
    twinButton.Text = "T"
    twinButton.Font = Enum.Font.GothamBold
    twinButton.TextSize = 12
    twinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    twinButton.BackgroundColor3 = Color3.fromRGB(100, 100, 180)
    twinButton.BorderSizePixel = 0
    twinButton.Parent = titleBar
    ApplyRoundedCorners(twinButton, 6)

    -- ==================== 输入框美化 - 关键改进：提高输入框背景亮度 ====================
    local function CreateInputBox(posY, placeholder, sizeX, posX)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(sizeX, 0, 0, 28)
        container.Position = UDim2.new(posX, 0, posY, 0)
        container.BackgroundColor3 = Color3.fromRGB(65, 65, 80) -- 明显提高输入框背景亮度
        container.BorderSizePixel = 0
        container.Parent = mainFrame
        
        -- 输入框渐变背景 - 提高亮度
        local inputGradient = Instance.new("UIGradient")
        inputGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(75, 75, 90)),  -- 提高顶部亮度
            ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 60, 75))   -- 提高底部亮度
        })
        inputGradient.Parent = container
        
        ApplyRoundedCorners(container, 6)
        
        -- 输入框阴影
        local inputStroke = Instance.new("UIStroke")
        inputStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        inputStroke.Color = Color3.fromRGB(0, 0, 0)
        inputStroke.Transparency = 0.8
        inputStroke.Thickness = 1
        inputStroke.Parent = container
        
        local box = Instance.new("TextBox")
        box.Size = UDim2.new(1, -10, 1, -6)
        box.Position = UDim2.new(0, 5, 0, 3)
        box.PlaceholderText = placeholder
        box.BackgroundTransparency = 1
        box.TextColor3 = Color3.fromRGB(255, 255, 255)
        box.Font = Enum.Font.Gotham
        box.TextSize = 12
        box.PlaceholderColor3 = Color3.fromRGB(180, 180, 200)
        box.Parent = container
        
        return box
    end

    local musicIDBox = CreateInputBox(0.18, "输入音乐ID...", 0.9, 0.05)
    local volumeBox = CreateInputBox(0.38, "音量 0.1-100", 0.4, 0.05)
    local pitchBox = CreateInputBox(0.38, "音调 0.1-100", 0.4, 0.55)

    -- ==================== 功能按钮美化 ====================
    local function CreateButton(text, posX, posY, sizeX, color)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(sizeX, 0, 0, 32)
        btn.Position = UDim2.new(posX, 0, posY, 0)
        btn.Text = text
        btn.Font = Enum.Font.GothamSemibold
        btn.TextSize = 13
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.BackgroundColor3 = color
        btn.AutoButtonColor = true
        btn.BorderSizePixel = 0
        btn.Parent = mainFrame
        
        -- 按钮悬停效果
        btn.MouseEnter:Connect(function()
            local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = tweenService:Create(btn, tweenInfo, {BackgroundColor3 = Color3.fromRGB(
                math.min(color.R * 255 + 15, 255),
                math.min(color.G * 255 + 15, 255),
                math.min(color.B * 255 + 15, 255)
            )})
            tween:Play()
        end)
        
        btn.MouseLeave:Connect(function()
            local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = tweenService:Create(btn, tweenInfo, {BackgroundColor3 = color})
            tween:Play()
        end)
        
        ApplyRoundedCorners(btn, 8)
        
        -- 按钮阴影
        local btnStroke = Instance.new("UIStroke")
        btnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        btnStroke.Color = Color3.fromRGB(0, 0, 0)
        btnStroke.Transparency = 0.8
        btnStroke.Thickness = 1
        btnStroke.Parent = btn
        
        return btn
    end

    -- 播放按钮颜色定义
    local playButtonDefaultColor = Color3.fromRGB(0, 162, 255) -- Roblox官方蓝色
    local playButtonSuccessColor = Color3.fromRGB(70, 200, 100) -- 成功绿色
    local playButtonFailureColor = Color3.fromRGB(220, 80, 80) -- 失败红色
    
    local playButton = CreateButton("播放", 0.05, 0.65, 0.4, playButtonDefaultColor)
    local stopButton = CreateButton("停止", 0.55, 0.65, 0.4, Color3.fromRGB(220, 80, 80))

    -- ==================== 切换按钮美化 ====================
    local function CreateToggleButton(text, posX, posY, sizeX, color)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(sizeX, 0, 0, 24)
        btn.Position = UDim2.new(posX, 0, posY, 0)
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 11
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.BackgroundColor3 = color
        btn.AutoButtonColor = true
        btn.BorderSizePixel = 0
        btn.Parent = mainFrame
        
        ApplyRoundedCorners(btn, 6)
        
        -- 切换按钮阴影
        local toggleStroke = Instance.new("UIStroke")
        toggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        toggleStroke.Color = Color3.fromRGB(0, 0, 0)
        toggleStroke.Transparency = 0.8
        toggleStroke.Thickness = 1
        toggleStroke.Parent = btn
        
        return btn
    end

    local loopToggle = CreateToggleButton("循环: ON", 0.55, 0.85, 0.4, Color3.fromRGB(70, 150, 200))
    local modeButton = CreateToggleButton("智能模式", 0.05, 0.85, 0.4, Color3.fromRGB(150, 100, 220))

    -- ==================== 添加分隔线 ====================
    local separator = Instance.new("Frame")
    separator.Size = UDim2.new(1, -20, 0, 1)
    separator.Position = UDim2.new(0, 10, 0.58, 0)
    separator.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
    separator.BorderSizePixel = 0
    separator.Parent = mainFrame

    -- ==================== 拖动系统 ====================
    mainFrame.Active = true
    mainFrame.Draggable = true

    -- ==================== 音频控制系统 ====================
    local soundSystem = {
        LoopEnabled = true,
        ActiveSounds = {},
        RemoteEvent = nil,
        CurrentMode = "auto",
        ModeNames = {auto = "智能模式", mode1 = "缓存模式", mode2 = "遍历模式"},
        ModeColors = {
            auto = Color3.fromRGB(150, 100, 220),
            mode1 = Color3.fromRGB(100, 180, 120),
            mode2 = Color3.fromRGB(220, 140, 100)
        },
        LastSoundName = nil,
        TwinMode = false
    }
    
    local function UpdateModeButton()
        modeButton.Text = soundSystem.ModeNames[soundSystem.CurrentMode]
        modeButton.BackgroundColor3 = soundSystem.ModeColors[soundSystem.CurrentMode]
    end
    
    modeButton.MouseButton1Click:Connect(function()
        soundSystem.CurrentMode = soundSystem.CurrentMode == "auto" and "mode1" or 
                                 soundSystem.CurrentMode == "mode1" and "mode2" or "auto"
        UpdateModeButton()
    end)
    
    local function UpdateTwinModeButton()
        twinButton.BackgroundColor3 = soundSystem.TwinMode and 
            Color3.fromRGB(70, 130, 200) or Color3.fromRGB(100, 100, 180)
    end
    
    twinButton.MouseButton1Click:Connect(function()
        soundSystem.TwinMode = not soundSystem.TwinMode
        UpdateTwinModeButton()
    end)
    
    UpdateModeButton()
    UpdateTwinModeButton()
    
    -- ==================== 音乐控制功能 ====================
    local function generateNaturalName()
        local prefixes = {"Music", "Sound", "Track", "Audio", "BG", "SFX", "Ambient"}
        local suffixes = {"Player", "System", "Device", "Box", "Machine", "Unit"}
        return prefixes[math.random(#prefixes)].."_"..suffixes[math.random(#suffixes)].."_"..math.random(1000,9999)
    end
    
    local function generateMusicIDName(musicID)
        return #musicID < 6 and "Audio_"..musicID or "Audio_"..musicID:sub(-6)
    end
    
    local function generateRandomName()
        local chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
        local name = ""
        for i = 1, math.random(8,12) do
            name = name .. string.sub(chars, math.random(1, #chars), math.random(1, #chars))
        end
        return name
    end
    
    local function generateSoundName(musicID)
        local strategies = {generateNaturalName, generateRandomName, function() return generateMusicIDName(musicID) end}
        return strategies[math.random(#strategies)]()
    end
    
    local function SafeStopSound(soundID)
        local stopped = false
        for _, location in ipairs({workspace, replicatedStorage}) do
            for _, obj in ipairs(location:GetDescendants()) do
                if obj:IsA("RemoteEvent") and obj.Name == "AC6_FE_Sounds" then
                    pcall(function()
                        obj:FireServer("stopSound", soundID)
                        stopped = true
                    end)
                end
            end
        end
        return stopped
    end

    local function StopAllSounds()
        if #soundSystem.ActiveSounds == 0 then return end
        
        local soundsToStop = {}
        for _, soundID in ipairs(soundSystem.ActiveSounds) do
            table.insert(soundsToStop, soundID)
        end
        
        for _, soundID in ipairs(soundsToStop) do
            SafeStopSound(soundID)
        end
        
        soundSystem.ActiveSounds = {}
        soundSystem.LastSoundName = nil
    end

    local function Mode1_Play(musicID, volume, pitch, loopEnabled)
        if soundSystem.RemoteEvent and not soundSystem.RemoteEvent:IsDescendantOf(game) then
            soundSystem.RemoteEvent = nil
        end
        
        if not soundSystem.RemoteEvent then
            for _, location in ipairs({workspace, replicatedStorage}) do
                for _, obj in ipairs(location:GetDescendants()) do
                    if obj:IsA("RemoteEvent") and obj.Name == "AC6_FE_Sounds" then
                        soundSystem.RemoteEvent = obj
                        break
                    end
                end
                if soundSystem.RemoteEvent then break end
            end
        end
        
        if not soundSystem.RemoteEvent then return false end
        
        local soundName = generateSoundName(musicID)
        local success = pcall(function()
            soundSystem.RemoteEvent:FireServer("newSound", soundName, workspace, 
                              "rbxassetid://"..musicID, pitch, volume, loopEnabled)
            soundSystem.RemoteEvent:FireServer("playSound", soundName)
        end)
        
        if success then
            table.insert(soundSystem.ActiveSounds, soundName)
            soundSystem.LastSoundName = soundName
            return true
        else
            soundSystem.RemoteEvent = nil
            return false
        end
    end

    local function Mode2_Play(musicID, volume, pitch, loopEnabled)
        local soundName = generateSoundName(musicID)
        local playedSuccessfully = false
        local remoteEvents = {}
        
        for _, location in ipairs({workspace, replicatedStorage}) do
            for _, v in ipairs(location:GetDescendants()) do
                if v:IsA("RemoteEvent") and v.Name == "AC6_FE_Sounds" then
                    table.insert(remoteEvents, v)
                end
            end
        end
        
        if #remoteEvents == 0 then return false end
        
        for _, remote in ipairs(remoteEvents) do
            local success = pcall(function()
                remote:FireServer("newSound", soundName, workspace, 
                                  "rbxassetid://"..musicID, pitch, volume, loopEnabled)
                remote:FireServer("playSound", soundName)
            end)
            
            if success then
                playedSuccessfully = true
                if not soundSystem.TwinMode then break end
            end
        end
        
        if playedSuccessfully then
            table.insert(soundSystem.ActiveSounds, soundName)
            soundSystem.LastSoundName = soundName
        end
        return playedSuccessfully
    end
    
    local function AutoMode_Play(musicID, volume, pitch, loopEnabled)
        return Mode1_Play(musicID, volume, pitch, loopEnabled) or Mode2_Play(musicID, volume, pitch, loopEnabled)
    end
    
    -- ==================== 播放按钮状态反馈系统 ====================
    local function handlePlayback()
        local musicID = musicIDBox.Text:gsub("%D+", "")
        if not musicID:match("^%d+$") or #musicID < 6 then return end
        
        local volume = math.clamp(tonumber(volumeBox.Text) or 1, 0.1, 100)
        local pitch = math.clamp(tonumber(pitchBox.Text) or 1, 0.1, 100)
        
        local success = false
        if soundSystem.CurrentMode == "mode1" then
            success = Mode1_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        elseif soundSystem.CurrentMode == "mode2" then
            success = Mode2_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        else
            success = AutoMode_Play(musicID, volume, pitch, soundSystem.LoopEnabled)
        end
        
        -- 播放按钮状态颜色反馈
        if success then
            playButton.BackgroundColor3 = playButtonSuccessColor
        else
            playButton.BackgroundColor3 = playButtonFailureColor
        end
        
        -- 0.5秒后恢复默认颜色
        task.delay(0.5, function()
            local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = tweenService:Create(playButton, tweenInfo, {BackgroundColor3 = playButtonDefaultColor})
            tween:Play()
        end)
    end

    local function handleStop()
        StopAllSounds()
        stopButton.BackgroundColor3 = Color3.fromRGB(250, 100, 100)
        task.delay(0.5, function()
            local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local tween = tweenService:Create(stopButton, tweenInfo, {BackgroundColor3 = Color3.fromRGB(220, 80, 80)})
            tween:Play()
        end)
    end
    
    playButton.MouseButton1Click:Connect(handlePlayback)
    stopButton.MouseButton1Click:Connect(handleStop)
    loopToggle.MouseButton1Click:Connect(function()
        soundSystem.LoopEnabled = not soundSystem.LoopEnabled
        loopToggle.Text = soundSystem.LoopEnabled and "循环: ON" or "循环: OFF"
        loopToggle.BackgroundColor3 = soundSystem.LoopEnabled and 
            Color3.fromRGB(70, 150, 200) or Color3.fromRGB(120, 120, 140)
    end)

    return screenGui
end

CreateFullUI()
print("🎵 音乐播放器UI已加载 - 背景亮度优化完成！")
